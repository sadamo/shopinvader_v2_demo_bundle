# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* fs_attachment
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 17.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2024-08-26 08:06+0000\n"
"Last-Translator: xtanuiha <feihu.zhang@live.com>\n"
"Language-Team: none\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.6.2\n"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_ir_attachment
#: model_terms:ir.ui.view,arch_db:fs_attachment.fs_storage_form_view
msgid "Attachment"
msgstr "附件"

#. module: fs_attachment
#: model_terms:ir.ui.view,arch_db:fs_attachment.fs_storage_form_view
msgid "Attachment's Url"
msgstr "附件的URL"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__autovacuum_gc
msgid "Autovacuum Garbage Collection"
msgstr "自动清理垃圾回收"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__base_url
msgid "Base Url"
msgstr "基础URL"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__base_url_for_files
msgid "Base Url For Files"
msgstr "文件的基础URL"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__create_uid
msgid "Created by"
msgstr "创建者"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__create_date
msgid "Created on"
msgstr "创建于"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__display_name
msgid "Display Name"
msgstr "显示名称"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_fs_storage
msgid "FS Storage"
msgstr "文件系统存储"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__field_ids
msgid "Field"
msgstr "字段"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/fs_storage.py:0
#, python-format
msgid ""
"Field %(field)s already stored in another FS storage ('%(other_storage)s')"
msgstr "字段 %(field)s 已经在另一个文件系统存储中存储 ('%(other_storage)s')"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__field_xmlids
msgid "Field Xmlids"
msgstr "字段Xmlids"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_ir_model_fields
msgid "Fields"
msgstr "字段"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__fs_filename
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__fs_filename
msgid "File Name into the filesystem storage"
msgstr "文件系统存储中的文件名"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_ir_binary
msgid "File streaming helper model for controllers"
msgstr "控制器的文件流辅助模型"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__fs_storage_id
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__fs_storage_id
msgid "Filesystem Storage"
msgstr "文件系统存储"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__fs_storage_code
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__fs_storage_code
msgid "Filesystem Storage Code"
msgstr "文件系统存储代码"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__fs_url
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__fs_url
msgid "Filesystem URL"
msgstr "文件系统URL"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__fs_url_path
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__fs_url_path
msgid "Filesystem URL Path"
msgstr "文件系统URL路径"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_fs_file_gc
msgid "Filesystem storage file garbage collector"
msgstr "文件系统存储文件垃圾收集器"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__force_db_for_default_attachment_rules
msgid "Force Db For Default Attachment Rules"
msgstr "强制数据库用于默认附件规则"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__id
msgid "ID"
msgstr "ID"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__use_x_sendfile_to_serve_internal_url
msgid ""
"If checked and odoo is behind a proxy that supports x-sendfile, the content "
"served by the attachment's internal URL will be servedby the proxy using the"
" fs_url if defined. If not, the file will be served by odoo that will stream"
" the content read from the filesystem storage. This option is useful to "
"avoid to serve files from odoo and therefore to avoid to load the odoo "
"process. "
msgstr ""
"如果选中并且Odoo位于支持x-sendfile的代理后面，附件的内部URL将由代理使用fs_url"
"提供服务（如果已定义）。如果没有定义，文件将由Odoo提供服务，Odoo将从文件系统"
"存储中读取内容并流式传输。这个选项有助于避免从Odoo提供文件服务，因此可以避免"
"加载Odoo进程。 "

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__autovacuum_gc
msgid ""
"If checked, the autovacuum of the garbage collection will be automatically "
"executed when the storage is used to store attachments. Sometime, the "
"autovacuum is to avoid when files in the storage are referenced by other "
"systems (like a website). In such case, records in the fs.file.gc table must"
" be manually processed."
msgstr ""
"如果选中，当存储用于存储附件时，垃圾收集的自动清理将自动执行。有时，当存储中"
"的文件被其他系统（如网站）引用时，需要避免自动清理。在这种情况下，必须手动处"
"理fs.file.gc表中的记录。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__optimizes_directory_path
msgid ""
"If checked, the directory path will be optimized to avoid too much files "
"into the same directory. This options is used when the storage is used to "
"store attachments. Depending on the storage, this option can be ignored. "
"It's useful for storage based on real file. This way, files with similar "
"properties will be stored in the same directory, avoiding overcrowding in "
"the root directory and optimizing access times."
msgstr ""
"如果选中，将优化目录路径以避免同一目录下文件过多。此选项在存储用于存放附件时"
"使用。根据存储的不同，此选项可能被忽略。这对于基于真实文件的存储非常有用。这"
"样，具有相似属性的文件将被存储在同一目录下，避免了根目录过度拥挤并优化了访问"
"时间。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__use_filename_obfuscation
msgid ""
"If checked, the filename will be obfuscated. This option is useful to avoid "
"to expose sensitive information trough the URL or in the remote storage. The"
" obfuscation is done using a hash of the filename. The original filename is "
"stored in the attachment metadata. The obfusation is to avoid if the storage"
" is used to store files that are referenced by other systems (like a "
"website) where the filename is important for SEO."
msgstr ""
"如果选中，文件名将被混淆。此选项有助于防止通过URL或远程存储暴露敏感信息。混淆"
"是通过使用文件名的哈希值来完成的。原始文件名会保存在附件的元数据中。如果存储"
"用于保存被其他系统（如网站）引用的文件，其中文件名对SEO很重要，则应避免进行混"
"淆。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__use_as_default_for_attachments
msgid "If checked, this storage will be used to store all the attachments "
msgstr "如果选中，此存储将被用于存放所有附件 "

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_model_fields__storage_id
msgid ""
"If specified, all attachments linked to this field will be stored in the "
"provided storage."
msgstr "如果指定了存储，与此字段关联的所有附件都将存储在所提供的存储中。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_model__storage_id
msgid ""
"If specified, all attachments linked to this model will be stored in the "
"provided storage."
msgstr "如果指定了存储，与该模型关联的所有附件都将存储在所提供的存储中。"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_attachment__internal_url
#: model:ir.model.fields,field_description:fs_attachment.field_product_document__internal_url
msgid "Internal URL"
msgstr "内部URL"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__is_directory_path_in_url
msgid "Is Directory Path In Url"
msgstr "目录路径是否在URL中"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__write_uid
msgid "Last Updated by"
msgstr "最后更新者"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__write_date
msgid "Last Updated on"
msgstr "最后更新于"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__field_ids
msgid ""
"List of fields such as attachments linked to one of these fields will be "
"stored in this storage. NB: If the attachment is linked to a field that is "
"in one FS storage, and the related model is in another FS storage, we will "
"store it into the storage linked to the resource field."
msgstr ""
"字段列表，比如附件如果链接到这些字段之一，将存储在此存储中。注意：如果附件链"
"接到一个在某个文件系统存储中的字段，并且相关模型在另一个文件系统存储中，我们"
"将把它存储在与资源字段链接的存储中。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__field_xmlids
msgid ""
"List of fields xml ids such as attachments linked to one of these fields "
"will be stored in this storage. NB: If the attachment is linked to a field "
"that is in one FS storage, and the related model is in another FS storage, "
"we will store it into the storage linked to the resource field."
msgstr ""
"字段的XML ID列表，比如附件如果链接到这些字段之一，将存储在此存储中。注意：如"
"果附件链接到一个在某个文件系统存储中的字段，并且相关模型在另一个文件系统存储"
"中，我们将把它存储在与资源字段链接的存储中。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__model_ids
msgid ""
"List of models such as attachments linked to one of these models will be "
"stored in this storage."
msgstr "模型列表，比如附件如果链接到这些模型之一，将存储在此存储中。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__model_xmlids
msgid ""
"List of models xml ids such as attachments linked to one of these models "
"will be stored in this storage."
msgstr "模型的XML ID列表，比如附件如果链接到这些模型之一，将存储在此存储中。"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__model_ids
msgid "Model"
msgstr "模型"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/fs_storage.py:0
#, python-format
msgid ""
"Model %(model)s already stored in another FS storage ('%(other_storage)s')"
msgstr "模型 %(model)s 已经存储在另一个文件系统存储中 ('%(other_storage)s')"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__model_xmlids
msgid "Model Xmlids"
msgstr "模型XML ID"

#. module: fs_attachment
#: model:ir.model,name:fs_attachment.model_ir_model
msgid "Models"
msgstr "模型"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__is_directory_path_in_url
msgid ""
"Normally the directory_path is for internal usage. If this flag is enabled "
"the path will be used to compute the public URL."
msgstr "通常目录路径是用于内部使用的。如果启用此标志，路径将用于计算公共URL。"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/ir_attachment.py:0
#, python-format
msgid "Only administrators can execute this action."
msgstr "只有管理员可以执行此操作。"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/fs_storage.py:0
#, python-format
msgid "Only one storage can be used as default for attachments"
msgstr "只有一个存储可以被用作附件的默认存储"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__optimizes_directory_path
msgid "Optimizes Directory Path"
msgstr "优化目录路径"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_ir_model__storage_id
#: model:ir.model.fields,field_description:fs_attachment.field_ir_model_fields__storage_id
msgid "Storage"
msgstr "存储"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/ir_attachment.py:0
#, python-format
msgid "Storage '%s' is disabled (see environment configuration)."
msgstr "存储 '%s' 已禁用（查看环境配置）。"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__fs_storage_code
msgid "Storage Code"
msgstr "存储代码"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/ir_attachment.py:0
#, python-format
msgid "Storages are disabled (see environment configuration)."
msgstr "存储已禁用（查看环境配置）。"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_file_gc__store_fname
msgid "Stored Filename"
msgstr "存储的文件名"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__fs_storage_code
#: model:ir.model.fields,help:fs_attachment.field_product_document__fs_storage_code
msgid ""
"Technical code used to identify the storage backend into the code.This code "
"must be unique. This code is used for example to define the storage backend "
"to store the attachments via the configuration parameter "
"'ir_attachment.storage.force.database' when the module 'fs_attachment' is "
"installed."
msgstr ""
"用于在代码中标识存储后端的技术代码。此代码必须唯一。\n"
"例如，当安装模块'fs_attachment'时，此代码用于通过配置参数'ir_attachment."
"storage.force.database'定义存储附件的存储后端。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__fs_url
#: model:ir.model.fields,help:fs_attachment.field_product_document__fs_url
msgid "The URL to access the file from the filesystem storage."
msgstr "访问文件系统的存储中文件的URL。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__internal_url
#: model:ir.model.fields,help:fs_attachment.field_product_document__internal_url
msgid "The URL to access the file from the server."
msgstr "从服务器访问文件的URL。"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/fs_storage.py:0
#, python-format
msgid ""
"The force_db_for_default_attachment_rules can only be set if the storage is "
"used as default for attachments."
msgstr "只有当存储被用作附件的默认存储时，才能设置force_db_for_default_attachment_rul"
"es。"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/fs_storage.py:0
#, python-format
msgid "The force_db_for_default_attachment_rules is not a valid python dict."
msgstr "force_db_for_default_attachment_rules 不是一个有效的 Python 字典。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__fs_filename
#: model:ir.model.fields,help:fs_attachment.field_product_document__fs_filename
msgid ""
"The name of the file in the filesystem storage.To preserve the mimetype and "
"the meaning of the filenamethe filename is computed from the name and the "
"extension"
msgstr "文件系统存储中文件的名称。为了保留文件的MIME类型和文件名的意义，文件名是根据"
"名称和扩展名计算得出的"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__fs_url_path
#: model:ir.model.fields,help:fs_attachment.field_product_document__fs_url_path
msgid "The path to access the file from the filesystem storage."
msgstr "从文件系统存储访问文件的路径。"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_ir_attachment__fs_storage_id
#: model:ir.model.fields,help:fs_attachment.field_product_document__fs_storage_id
msgid "The storage where the file is stored."
msgstr "文件存储的位置。"

#. module: fs_attachment
#: model:ir.model.constraint,message:fs_attachment.constraint_fs_file_gc_store_fname_uniq
msgid "The stored filename must be unique!"
msgstr "存储的文件名必须是唯一的！"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__use_as_default_for_attachments
msgid "Use As Default For Attachments"
msgstr "用作附件的默认存储"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__use_filename_obfuscation
msgid "Use Filename Obfuscation"
msgstr "使用文件名混淆"

#. module: fs_attachment
#: model:ir.model.fields,field_description:fs_attachment.field_fs_storage__use_x_sendfile_to_serve_internal_url
msgid "Use X-Sendfile To Serve Internal Url"
msgstr "使用X-Sendfile服务内部URL"

#. module: fs_attachment
#: model:ir.model.fields,help:fs_attachment.field_fs_storage__force_db_for_default_attachment_rules
msgid ""
"When storing attachments in an external storage, storage may be slow.If the storage is used to store odoo attachments by default, this could lead to a bad user experience since small images  (128, 256) are used in Odoo in list / kanban views. We want them to be fast to read.This field allows to force the store of some attachments in the odoo database. The value is a dict Where the key is the beginning of the mimetype to configure and the value is the limit in size below which attachments are kept in DB. 0 means no limit.\n"
"Default configuration means:\n"
"* images mimetypes (image/png, image/jpeg, ...) below 50KB are stored in database\n"
"* application/javascript are stored in database whatever their size \n"
"* text/css are stored in database whatever their size"
msgstr ""
"当附件存储在外部存储时，存储可能会变慢。如果默认使用存储来存储Odoo附件，这可"
"能会导致不良的用户体验，因为在Odoo的列表/看板视图中使用了小图像（128, 256）。"
"我们希望它们能够快速读取。此字段允许强制将某些附件存储在Odoo数据库中。值是一"
"个字典，其中键是配置的mimetype的开头，值是附件保留在数据库中的大小限制。0表示"
"无限制。\n"
"默认配置意味着：\n"
"* 50KB以下的图像mimetypes（image/png，image/jpeg，...）存储在数据库中\n"
"* 无论大小，application/javascript都存储在数据库中\n"
"* 无论大小，text/css都存储在数据库中"

#. module: fs_attachment
#. odoo-python
#: code:addons/fs_attachment/models/ir_attachment.py:0
#, python-format
msgid ""
"You can't write on multiple attachments with different mimetypes at the same"
" time."
msgstr "你不能同时在具有不同mimetype的多个附件上进行写操作。"
